Allgemeines
  Scrollen: Alle großen Eingabefelder sind scrollbar (auch ohne Scroll-bar)
  Kopieren/Einfügen: In alle Eingaben kann kopiert und eingefügt werden
    Einige Felder akzeptieren nur bestimmte Eingaben (z.B. nur Zahlen)

  IN: das obere Textfeld
    Annagram/Regex: die Eingabe vor dem Such-Knopf
  OUT: das untere Textfeld
    Annagramm/Regex: die vier unteren Textfelder

Annagramm
  Find Wörter, die die gleichen Buchstaben (oder weniger/mehr) als IN haben

  Search: startet den Such-prozess; Dies kann einige Sekunden dauern
  Wortlist: Wähle eine Liste, aus der mögliche Wörter stammen
  type:
    match: exakte Übereinstimmung (ab -> ab, ba)
    bigger: Wörter in OUT sind größer als IN (ab -> ab, cab, ...)
    smaller: Wörter in OUT sind kleiner als IN (ab -> a, b, ab, ba)

Ascii
  Wandel zwischen Zahlen und den jeweiligen Buchstaben um

  type:
    1-26:  A= 1, Z=26, a= 1, z= 26
    ascii: A=65, Z=90, a=97, z=122
    dec: Dezimal (Zehnersystem)
    bin: Binär (Zweiersystem)
    hex: Hexadezimal (Sechzehnersystem)
  reverse: Tauscht IN und OUT + 
    Wenn angegreuzt wird der Entschlüssler zum Verschlüssler

Atbasch
  A->Z, B->Y, ... , Y->B, Z->A

  Switch: Tauscht IN und OUT

Base
  Zahlensystem ändern (Zahlen getrennt durch LEERZEICHEN)

  IN-Base: Zahlensystem für IN
  OUT-Base: Zahlensystem für OUT

Braille
  Schreibe und übersetzte Braille

  Generelle Eingabe: (Alles Ziffernblock/numpad)
    Die Punkte werden mit 895623 folgendermaßen plaziert
      8 9
      5 6
      2 3
    0 : siehe Reset
    ENTER: siehe Submit
    BACKSPACE, Steuerung+V und Auswählen (Maus) ignorieren |
  '': Diese leere Box zeigt der derzeitigen Buchstaben
  Submit / ENTER: Schreibt den Buchstaben uas der Box in IN
  Reset / numpad-0: Leert die Box
  reverse: Tauscht IN und OUT + 
    Wenn angegreuzt wird der Entschlüssler zum Verschlüssler

Caesar
  Buchstaben werden um rotation weitergeschoben

  Rotation: Anzahl der Verschiebung; Rot=0 gibt alle Rotationen zurück (1-25)
  reverse: Tauscht IN und OUT + 
    Wenn angegreuzt wird der Entschlüssler zum Verschlüssler

Filter
  Entfernt Zeichen basierend auf einem Index oder Zeichen

  index: jedes i-te Zeichen wird entfernen
    no spaces: Leerzeichen werden bei der Zählung übersprungen
  character: entfernt das Zeichen c aus IN
  "": diese unbenannte Eingabe wird für i bzw. c genutzt

Morse
  übersetzt Morsezeichen

  dit (.): das Symbol für ein kurzes Signal
  dah (-): das Symbol für ein langes Signal
  letter sep: das Symbol zwischen Buchstaben (Standard ist LEERZEICHEN)
  word sep: das Symbol zwischen Wörtern (Standard ist /)
  reverse: Tauscht IN und OUT + 
    Wenn angegreuzt wird der Entschlüssler zum Verschlüssler

Regex
  Wörter finden, die zu einem Muster passen; für mehr info siehe ganz unten

  Search: startet den Such-prozess; Dies kann einige Sekunden dauern
  Wortlist: Wählen Sie eine Liste, aus der mögliche Wörter stammen
  type:
    match: exakte Übereinstimmung (a[bc]d -> abd, acd)
    bigger: Wörter in OUT sind größer als IN (a[bc]d -> abd, acd, xabdx, ...)

Vigenere
  Addirene einen Schlüssel zu IN [B(2)+D(4) = F(6)]

  key: der Schlüssel, der zu IN addiert wird
  reverse: Tauscht IN und OUT + 
    Wenn angegreuzt wird der Entschlüssler zum Verschlüssler

Regex-help:
  für mehr info siehe www.regexe.de/hilfe.jsp
  Spezielle Charactere:
    . = beliebiges Zeichen
    [] = Zeichen-Set; zählt als ein Zeichen
    () = Gruppe; die Gruppe ist ein Token
    [A-Z] / [0-9] = Bereich A bis Z / 0 bis 9 (in Ascii-Sortierung)
    + = widerholt vorherigen Token 1 mal oder öfter
    * = widerholt vorherigen Token 0 mal oder öfter
    ? = widerholt vorherigen Token 0 mal oder 1 mal
    {x} = vorhergehendes Token x mal wiederholen
    {x,y} = vorhergehendes Token x-mal bis y-mal wiederholt
    | = oder; vorangehendes oder nachfolgenders Token
    +? /*? = faul; versucht, so wenige Zeichen wie möglich zu finden
    \ = Escape-Sonderzeichen (\+ heißt buchstablich +)
  Beispiele:
    a[bc]d     -> abd, acd
    [a-f]g\d   -> ag1, dg7, ...
    (ab)|(cd)e -> abe, cde
    a*b        -> b, ab, aab, aaab, ...
    .*?b       -> b, xb, asb, bb, ...
    .*?b    NICHT sbb weil .*? faul ist, .*? = s; b=b und ein b bleibt übrig