General things
  Scroll: all big input-fields are scrollable (regardless of scrollbar)
  Copy/Paste: all inputs can be coppied and pasted into
    some fields only accept certain values (like only numbers)

  IN: the upper text-box
    Anagram/Regex: the input before the search-button
  OUT: the lower text-box
    Anagram/Regex: the four lower text-boxes

Anagram
  Find Words that share the same letters (or less/more) than IN

  Search: start the searching process; this can take a few seconds
  Wordlist: Choose a list from which possible Words come from
  type:
    match: exact match (ab -> ab, ba)
    bigger: Words in OUT are bigger than IN (ab -> ab, cab, ...)
    smaller: Words in OUT are smaller than IN (ab -> a, b, ab, ba)

Ascii
  Convert between numbers and the respective letters

  type:
    1-26:  A= 1, Z=26, a= 1, z= 26
    ascii: A=65, Z=90, a=97, z=122
    dec: decimal (base ten)
    bin: binary (base two)
    hex: hexadecimal (base sixteen)
  reverse: switch In and OUT + if ticked the Decoder turns into an Encoder

Atbash
  A->Z, B->Y, ... , Y->B, Z->A

  switch: switch IN and OUT

Base
  Change base of numbers (numbers seperated by SPACE)

  IN-Base: base of numbers in IN
  OUT-Base: base of numbers in OUT

Braille
  Write and translate Braille

  Genaral Input: (All numpad)
    The dots are places with 895623 like this
      8 9
      5 6
      2 3
    0 : see Reset
    ENTER: see Submit
    BACKSPACE, Control+V and selecting (mouse) treat | as nonexistent
  '': this empty box shows the current character
  Submit / ENTER: writes the character in the box into IN
  Reset / numpad-0: Clears the box
  reverse: switch In and OUT + if ticked the Decoder turns into an Encoder

Caesar
  shift letters by rotation

  Rotation: amount of letters shifted; Rot=0 returns all rotations (1-25)
  reverse: switch In and OUT + if ticked the Decoder turns into an Encoder

Filter
  Removes characters based on an index or character

  index: remove every i-th character 
    no spaces: spaces get skipped in the count
  character: removes a character c from IN
  "": this unnamed input takes i or c respectively

Morse
  translates morse

  dit (.): the symbol for a short signal
  dah (-): the symbol for a long signal
  letter sep: the symbol between letters (standard is SPACE)
  word sep: the symbol between words (standard is /)
  reverse: switch In and OUT + if ticked the Decoder turns into an Encoder

Regex
  find Words matching a patern; see below for more info

  Search: start the searching process; this can take a few seconds
  Wordlist: Choose a list from which possible Words come from
  type:
    match: exact match (a[bc]d -> abd, acd)
    bigger: Words in OUT are bigger than IN (a[bc]d -> abd, acd, xabdx, ...)

Vigenere
  add a key to the text [B(2)+D(4) = F(6)]

  key: the key that gets added to IN 
  reverse: switch In and OUT + if ticked the Decoder turns into an Encoder

Regex-help:
  for more info see regexr.com/ sidebar

  special characters:
    . = any character
    [] = character set; counts as one character
    () = group; makes content into one token
    [A-Z] / [0-9] = range A to Z / 0 to 9 (in ascii sorting)
    + = repeat preceding token 1 or more times
    * = repeat preceding token 0 or more times
    ? = repeat preceding token 0 or 1 times
    {x} = repeat preceding token x times
    {x,y} = repeat preceding token x to y times
    | = or; preceding or following token
    +? / *? = lazy; tries to match as few characters as possible
    \ = escape special character (\+ means literal +)
  examples:
    a[bc]d     -> abd, acd
    [a-f]g\d   -> ag1, dg7, ...
    (ab)|(cd)e -> abe, cde
    a*b        -> b, ab, aab, aaab, ...
    .*?b       -> b, xb, asb, bb, ... 
    .*?b      NOT sbb because .*? is lazy so .*? = s; b=b and one b remains